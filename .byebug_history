c
request.session
request.authenticated?
request.user
request.user_agent
request.remote_ip
request.headers['X-My-Header']
request.query_parameters
request.method
request

request.referer
request.path
request.env
request.from
request.body
request.origin
request.auth_type
request.auth_type\
request.request_id
request.controller_class
request.xhr?
request.flash_hash
request.methods
request
c
record.user == user 
record.user = user 
record.user
record
c
record
c
user
record.user
record
c
ss
s
n
s
ss
s
help
s
n
c
Message.last
n
Message.last
@message.errors
@message
n
@message 
c
@message
params
c
params
c
params
c
chat_params[:user_id]
chat_params
@chat.errors.methods
@chat.errors.attribute
@chat.errors
@chat.valid?
mm.valid?
mm = @chat.messages.build(text: chat_params[:title], user_id: chat_params[:user_id])
m = @chat.messages.build(text: chat_params[:title], user_id: chat_params[:user_id])
@chat.messages.build(text: chat_params[:title], user_id: chat_params[:user_id])
@chat.errors.messages
@chat.errors
@chat.valid?
@chat.messages.build(text: chat_params[:title])
@chat
chat_params
c
chat_params
c
exit
params.require(:chat).permit(:user_id, messages_attributes: %i[text user_id])
params
c
params.require(:chat).permit(:user_id, messages_attributes: %i[text user_id])
params
c
cc
c
params
c
params
c
params
c
params
c
params
c
@elements.count
@elements
@elemets
c
User.limit(2).class
@elements.class
@elements
@elements.class
@elements.count
c
@users
c
hhh[param.to_symc]
hhh[param.to_sym]
hhh[param]
h[param]
param
hhh
c
h
c
params[:sort_by].present?
params
@users
c
@users
c
param.to_sym
param
c
params
params.slice
params 
c
params
params[:start_date]
search_paramss
search_params
c
с
search_params
c
params.to_unsafe_h.slice(:start_date, :end_date, :status )
params.to_unsafe_h.slice(start_date, :end_date, :status )
params.to_unsafe_h.splice(start_date, :end_date, :status )
params.to_unsafe_h
c
params.to_unsafe_h
params)
params.to_unsafe_h.slice(:state)
params.to_unsafe_h
params.to_unsave_h
params.to_unseve_h
params.slice(:status)
c
params.to_unsafe_hash.slice(:status, :start_date, :end_date)
params.to_unsafe_hash
params.to_h
param.to_h
params 
params.slice(:status, :start_date, :end_date)
c
1 if end_date
!end_date
end_date.false?
end_date.nil?
end_date
Date.now
Date.today
Date.parse('')
Date.parse(nil)
Date.pate(nil)
end_date
Date.parse(start_date)
start_date
c
start_date
c
status
c
status
c
params.to_unsafe_h
params.to_h
params
c
@orders.count
@orders
@pafinate_orders
@filtered_orders.count
@filtered_orders
c
@paginate_orders.size
@orders.size
c
@products.count
params
c
@products.count
params
c
params
@products.page(params[:page]).per(18)
c
params
c
params
c
params
c
params
c
params
c
params
exit
params
c
c'
params
c
params
c
params
c
params
c
params
c
с
@products.find_by(name: 'Редис')
   @products = @products.page(params[:page]).per(18)
=> 14:     @products = @products.page(params[:page]).per(18)
@products.page(params[:page]).per(18)
params
c
params
c
params
c
params
c
params
c
params
c
с
params
c
params
c
params
c
params[:search]
params
params[:filter]
